{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# COGS 108 - Final Project "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Overview"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This study attempted to see if there was a relationship between a resturant's food safety and yelp rating, by  conducting a  Mann-Whitney U Test between the variables Yelp Rating, and Violation Severity. Ultimately I rejected the null hypothesis, and found that there was a difference in distributions between Yelp Rating, and Violation Severity. The alpha was set to 0.05, and the calculated p value was epqual to 0.0, therefore rejecting the null hypothesis."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Name & PID\n",
    "\n",
    "- Name: David Hornaday\n",
    "- PID: A13508342"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Research Question"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Can yelp reviews be used as a metric to judge a resturant's health violation safety? In other words will resturant's with higher violation point scores, be given lower ratings on yelp?"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Background and Prior Work"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Previous research in regards to health inspections have found a genral trend upwards or an increase in the overall means for resturants in Tennessee from 1993-2000. In, \"Restaurant Inspection Scores and Foodborne Disease,\" Timothy Jones, Boris Pavlin, Bonnie LaFleur, L. Amanda Ingram, and William Schaffner conducted an analytical study on health inspections data in Tennesse from January 1993 - April 2000. During this time they saw a rise in mean health inspection scores from 80.2 - 83.8. Mean scores for individual inspectors rose from 69-92. Finally they found that food establishments that scored less that 60 saw a mean improvement of 16 points. Essentially with the existance of Health Inspections, we can see a rise in overall scores every year and a general positive trend between time and scores. \n",
    "\n",
    "Previous research in regards to Yelp, illustrates that Yelp ratings for individual non-chain resturaunts correspond with revenue. In, \"Reviews, Reputation, and Revenue: The Case of Yelp.com,\" Michael Luca implements a discontinuity approach to prove his hypothesis that Yelp ratings have as he describes a casual impact on revenue. Luca found that a one star increase in a Yelp rating corresponded to a 5-9% increase in revenue. His study also suggest that humans respond to more visible quality changes, and when a rating contains more information. Essentially there is data suggesting that overtime there is a general trend for health inspections scores to increase, as well as data suuggesting that Yelp reviews can correspond to more revenue. Overall it is possible that these could lead to higher quality of resturants as reviews are taken seriously by owners. Maybe there then exists some correlation between yelp reviews and health inspection scores.\n",
    "\n",
    "\n",
    "References (include links):\n",
    "- 1)\"Restaurant Inspection Scores and Foodborne Disease\"\n",
    "https://www.ncbi.nlm.nih.gov/pmc/articles/PMC3323064/\n",
    "- 2)\"Reviews, Reputation, and Revenue: The Case of Yelp.com\"\n",
    "https://www.hbs.edu/faculty/Publication%20Files/12-016_a7e4a5a2-03f9-490d-b093-8f951238dba2.pdf"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Hypothesis\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "H0: There is no difference between distributions of Yelp rating and health inspection violation point score \n",
    "(p <= alpha).\n",
    "\n",
    "Ha: There is a difference between distributions of Yelp rating and health inspection violation point score \n",
    "(p > alpha )."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Dataset(s)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "For this study I will be using three datastes from Wake County, North Carolina: 'inspections.csv','yelp.csv',and 'violations.csv'\n",
    "\n",
    "\n",
    "##### 'inspections.csv'\n",
    "\n",
    "-This data contains information on the resturants in Wake County, and their respective scores as well as   general information relating to each resturant such as phone number, address, zip code, and facility type. The data also contains information on the health inspectors, and previous health inspection dates. This data is important because health inspection scores themselves are the ideal metric for judging a resturant's health safety. \n",
    "\n",
    "##### 'yelp.csv'\n",
    "\n",
    "-This data set contains information on the resturants in Wake County and their respective ratings on Yelp. It also contains information on the amount of reviews as well as the relative price and classification on the type of food the resturaunt serves. Finally the data also contains information on the address and zip code as well as phone number for each resturant.\n",
    "\n",
    "##### 'violations.csv'\n",
    "\n",
    "-This data contains information on the resturaunts of Wake County and the violations they may have as well as a point value assigned to each violation.The data contains an hsisid number which can be used to merge with the inspections dataset. \n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Setup"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Imports\n",
    "\n",
    "%matplotlib inline\n",
    "\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pyplot as plt\n",
    "import matplotlib as mpl\n",
    "import seaborn as sns\n",
    "import patsy \n",
    "import statsmodels.api as sm\n",
    "from scipy.stats import mannwhitneyu\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above shows the imports I will be using."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_inspections = pd.read_csv('inspections.csv')\n",
    "df_yelp_reviews = pd.read_csv('yelp.csv')\n",
    "df_violations = pd.read_csv('violations.csv')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In the cell above I create three dataframes: df_inspections, df_yelp_reviews, and df_violations all corresponding to their respective csv files of the same name. These will be cleaned and merged later. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Cleaning"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Essentially I want to tidy up and standardize the data as best as I can before combining. The simplist way to combine my two dataframes will be by using the resturant's address and hsisid as I believe as there exists the least amount of variability between datasets in these categories. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [],
   "source": [
    "#This cell defines a function that can then later be called upon to standardize variability\n",
    "#in string entries\n",
    "\n",
    "def standardize_string(string):\n",
    "    \n",
    "    string = str(string)\n",
    "    string = string.lower()\n",
    "    string = string.strip()\n",
    "    \n",
    "    return string"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above established a general function that will be later called upon to standardize the names and addresses for the 'inspections.csv' and 'yelp.csv' dataframes. This will be essential in ensuring that they are accurately merged together. Essentially the code first converts any non string entry to a string, which in the case of this data set will be mostly NaN values, however it will also convert interger entries to string. The function then makes all address entries lower case as there is some variabilty in capitalization between data sets, and finally the function strips the white space returning the standardized string. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Inspections\n",
    "#This code drops certain data that is not relavant to the study or may violate the ethics of the study\n",
    "#For example inspector's names are private information that is not relevant to the study\n",
    "#Also including both address as well as lattitude and longitude coordinates is a bit redundant\n",
    "\n",
    "df_inspections = df_inspections.drop(['date','phonenumber','address2','x','y','geocodestatus','inspectedby','postalcode','previous_inspection_by_same_inspector','previous_inspection_date','inspector_id','restaurantopendate'], axis=1)  \n",
    "\n",
    "df_inspections = df_inspections.drop(['num_critical_previous','num_non_critical_previous','num_critical_mean_previous','num_non_critical_mean_previous','avg_neighbor_num_critical','avg_neighbor_num_non_critical','top_match','second_match','critical'], axis=1)\n",
    "\n",
    "#Dropping rows with missing data only in the 'name' or 'score' columns \n",
    "\n",
    "df_inspections = df_inspections.dropna(subset = ['name','address1'])\n",
    "\n",
    "#Applying standardizing_string function to 'name' column\n",
    "\n",
    "df_inspections['name'] = df_inspections['name'].apply(standardize_string)\n",
    "\n",
    "#Applying standardizing_string function to 'address1' column\n",
    "\n",
    "df_inspections['address1'] = df_inspections['address1'].apply(standardize_string)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above dropped rows in df_inspections that had potentially sensitive information in regards to the official health inspector, as well as superfluous information such as phone numbers, as well as certain numerical data which in theory could be of use in a very much more involved an in depth study, however given restraints of this project, certain variables were eliminated in order to explore my research question further. The cell also drops any rows that are missing entries in the name or address column, and applys the standardize_string function to these two columns as well."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Yelp\n",
    "#This code drops certain data that is not relavant to the study or may produce unnecessary overlap\n",
    "#For example additional zip code and name columns will not be needed after merge so\n",
    "#they can be dropped initially\n",
    "\n",
    "df_yelp_reviews = df_yelp_reviews.drop(['id','latitude','longitude','phone'], axis=1)\n",
    "\n",
    "df_yelp_reviews = df_yelp_reviews.drop(['zip_code', 'name'], axis=1)\n",
    "\n",
    "#Dropping rows with missing data in the 'address1' column\n",
    "\n",
    "df_yelp_reviews = df_yelp_reviews.dropna(subset = ['address1'])\n",
    "\n",
    "#Applying standardizing_string function to 'address1' column\n",
    "\n",
    "df_yelp_reviews['address1'] = df_yelp_reviews['address1'].apply(standardize_string)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above drops overlap or unneccessary columns in df_yelp_reviews that were unnecessary to the study, because they presented overlap data. The cell als dropped any rows missing an address entry before applying the standardize_string function."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Violations\n",
    "\n",
    "df_violations = df_violations.drop(['X.objectid','statecode','inspectedby','comments','inspectdate','questionno','cdcdataitem'], axis=1)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above drops unneccessary columns in df_violations. Because there is no variabilty in df_violations and df_inspections hsisid numbers no steps need to be made to reduce variabilty. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Inspections, Yelp, and Violations\n",
    "#This code will create a new dataframe that contains data on both the yelp scores and health code inspection scores\n",
    "\n",
    "df_inspections_vs_yelp = pd.merge(df_inspections, df_yelp_reviews, left_on='address1', right_on='address1' )\n",
    "\n",
    "\n",
    "df_insp_violations_yelp = pd.merge(df_inspections_vs_yelp, df_violations, left_on='hsisid', right_on='hsisid' )\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above creates a new dataframe, df_inspections_vs_yelp, by merging df_inspections and df_yelp_reviews by their address1 columns. Then another dataframe is made called df_insp_violations_yelp by merging the new df_inspections_vs_yelp and df_violations by hsisid number. The cell below displays the head of the new dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>hsisid</th>\n",
       "      <th>name</th>\n",
       "      <th>address1</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>days_from_open_date</th>\n",
       "      <th>facilitytype</th>\n",
       "      <th>zip</th>\n",
       "      <th>type</th>\n",
       "      <th>description</th>\n",
       "      <th>...</th>\n",
       "      <th>category</th>\n",
       "      <th>critical</th>\n",
       "      <th>violationcode</th>\n",
       "      <th>severity</th>\n",
       "      <th>shortdesc</th>\n",
       "      <th>pointvalue</th>\n",
       "      <th>observationtype</th>\n",
       "      <th>violationtype</th>\n",
       "      <th>count</th>\n",
       "      <th>cdcriskfactor</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>4092015191</td>\n",
       "      <td>taste of china</td>\n",
       "      <td>6209 rock quarry rd</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>1509</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>27610</td>\n",
       "      <td>Inspection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Employee Health</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2-201.11(A)</td>\n",
       "      <td>Priority</td>\n",
       "      <td>Management, employees knowledge; responsibilit...</td>\n",
       "      <td>0</td>\n",
       "      <td>Out</td>\n",
       "      <td>CDI</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>4092015191</td>\n",
       "      <td>taste of china</td>\n",
       "      <td>6209 rock quarry rd</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>1509</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>27610</td>\n",
       "      <td>Inspection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Employee Health</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2-103.11(M)</td>\n",
       "      <td>Priority Foundation</td>\n",
       "      <td>Management, employees knowledge; responsibilit...</td>\n",
       "      <td>1</td>\n",
       "      <td>Out</td>\n",
       "      <td>R</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>2</th>\n",
       "      <td>4092015191</td>\n",
       "      <td>taste of china</td>\n",
       "      <td>6209 rock quarry rd</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>1509</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>27610</td>\n",
       "      <td>Inspection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Employee Health</td>\n",
       "      <td>Yes</td>\n",
       "      <td>2-103.11(M)</td>\n",
       "      <td>Priority Foundation</td>\n",
       "      <td>Management, employees knowledge; responsibilit...</td>\n",
       "      <td>0</td>\n",
       "      <td>Out</td>\n",
       "      <td>CDI</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>3</th>\n",
       "      <td>4092015191</td>\n",
       "      <td>taste of china</td>\n",
       "      <td>6209 rock quarry rd</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>1509</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>27610</td>\n",
       "      <td>Inspection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Food Identification</td>\n",
       "      <td>No</td>\n",
       "      <td>3-302.12</td>\n",
       "      <td>Core</td>\n",
       "      <td>Food properly labeled; original container</td>\n",
       "      <td>0</td>\n",
       "      <td>Out</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>4</th>\n",
       "      <td>4092015191</td>\n",
       "      <td>taste of china</td>\n",
       "      <td>6209 rock quarry rd</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>1509</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>27610</td>\n",
       "      <td>Inspection</td>\n",
       "      <td>NaN</td>\n",
       "      <td>...</td>\n",
       "      <td>Food Temperature Control</td>\n",
       "      <td>No</td>\n",
       "      <td>3-501.13</td>\n",
       "      <td>Core</td>\n",
       "      <td>Approved thawing methods used</td>\n",
       "      <td>0</td>\n",
       "      <td>Out</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "      <td>NaN</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>5 rows × 49 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "       hsisid            name             address1     city state  \\\n",
       "0  4092015191  taste of china  6209 rock quarry rd  raleigh    NC   \n",
       "1  4092015191  taste of china  6209 rock quarry rd  raleigh    NC   \n",
       "2  4092015191  taste of china  6209 rock quarry rd  raleigh    NC   \n",
       "3  4092015191  taste of china  6209 rock quarry rd  raleigh    NC   \n",
       "4  4092015191  taste of china  6209 rock quarry rd  raleigh    NC   \n",
       "\n",
       "   days_from_open_date facilitytype    zip        type description  ...  \\\n",
       "0                 1509   Restaurant  27610  Inspection         NaN  ...   \n",
       "1                 1509   Restaurant  27610  Inspection         NaN  ...   \n",
       "2                 1509   Restaurant  27610  Inspection         NaN  ...   \n",
       "3                 1509   Restaurant  27610  Inspection         NaN  ...   \n",
       "4                 1509   Restaurant  27610  Inspection         NaN  ...   \n",
       "\n",
       "                   category  critical  violationcode             severity  \\\n",
       "0           Employee Health       Yes    2-201.11(A)             Priority   \n",
       "1           Employee Health       Yes    2-103.11(M)  Priority Foundation   \n",
       "2           Employee Health       Yes    2-103.11(M)  Priority Foundation   \n",
       "3       Food Identification        No       3-302.12                 Core   \n",
       "4  Food Temperature Control        No       3-501.13                 Core   \n",
       "\n",
       "                                           shortdesc  pointvalue  \\\n",
       "0  Management, employees knowledge; responsibilit...           0   \n",
       "1  Management, employees knowledge; responsibilit...           1   \n",
       "2  Management, employees knowledge; responsibilit...           0   \n",
       "3          Food properly labeled; original container           0   \n",
       "4                      Approved thawing methods used           0   \n",
       "\n",
       "   observationtype  violationtype count  cdcriskfactor  \n",
       "0              Out            CDI   NaN            NaN  \n",
       "1              Out              R   NaN            NaN  \n",
       "2              Out            CDI   NaN            NaN  \n",
       "3              Out            NaN   NaN            NaN  \n",
       "4              Out            NaN   NaN            NaN  \n",
       "\n",
       "[5 rows x 49 columns]"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insp_violations_yelp.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def anon_zip(string):\n",
    "\n",
    "    string = str(string)\n",
    "    string = string.strip()\n",
    "    string = (string[:-2]+'**')\n",
    "    \n",
    "    return string\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "This code was written to be called upon to disguise the last two digits of a zip code. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def standardize_price(string):\n",
    "    \n",
    "    string = str(string)\n",
    "    string = string.strip()\n",
    "    \n",
    "    if string == '$':\n",
    "        string = string.replace('$', '10')\n",
    "    elif string == '$$':\n",
    "        string = string.replace('$$', '30')\n",
    "    elif string == '$$$':\n",
    "        string = string.replace('$$$', '60')\n",
    "    elif string == '$$$$':\n",
    "        string = string.replace('$$$$', '99')\n",
    "    else:\n",
    "        string = 'NaN'\n",
    "        \n",
    "    if string.isnumeric() and int(string) < 100:\n",
    "        string = int(string)\n",
    "    else:\n",
    "        string = np.nan\n",
    "\n",
    "    return string\n",
    "        "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above creates a function called standardize_price which takes Yelps ordinal variables for price and converts them to an integer value which shows the general price Yelp's categorical variables were defined by. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp = df_insp_violations_yelp.rename(columns={\"score\": \"health_inspections_score\",\"rating\": \"yelp_rating\",\"price\": \"price_dollars\",\"facilitytype\": \"facility_type\",\"shortdesc\": \"violation_desc\",\"pointvalue\": \"point_value\",\"violationtype\": \"violation_type\",\"cdcriskfactor\": \"cdc_risk_factor\"})"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above just renames columns so that there isn't variance between data sets and it is a more uniform dataframe. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp = df_insp_violations_yelp[['name','city','state','zip','facility_type','health_inspections_score','yelp_rating','review_count','price_dollars','violation_type','point_value','cdc_risk_factor','num_critical','num_non_critical']]"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above sets the dataframe to only include the columns I will be using for analysis after the initial merge I felt as though there were too many columns that would not be of use in my data explorations although they may be useful for a more in depth study. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [],
   "source": [
    "#Drops rows with data in 'health_inspections_score','yelp_rating','review_count','violation_type' columns\n",
    "\n",
    "df_insp_violations_yelp = df_insp_violations_yelp.dropna(subset = ['health_inspections_score','yelp_rating','review_count','violation_type'])\n",
    "\n",
    "#Applying anon_zip function to 'zip' column\n",
    "\n",
    "df_insp_violations_yelp['zip'] = df_insp_violations_yelp['zip'].apply(anon_zip)\n",
    "\n",
    "#Applying standardize_price function to 'price_dollars' column\n",
    "\n",
    "df_insp_violations_yelp['price_dollars'] = df_insp_violations_yelp['price_dollars'].apply(standardize_price)\n",
    "\n",
    "#Applying standardize_string function to 'violation_type' column\n",
    "\n",
    "df_insp_violations_yelp['violation_type'] = df_insp_violations_yelp['violation_type'].apply(standardize_string)\n",
    "\n",
    "#Create a new column categorizing violations with point scores less than two and those greater than two \n",
    "\n",
    "df_insp_violations_yelp['violation_severity'] = df_insp_violations_yelp['point_value'].apply(lambda x: 0 if x<2 else 1)\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above drops rows in the new datframe with missing values, as well as applys several standardizing functions. The anon_zip removes the last two digits of the zip code column. The standardize_price function converts Yelps cordinal string values to be an ordinal integer value of similar meaning. The standardize_string function is applied to the 'violation_type' column. A new column categorizing violations with point scores less than two and those greater than two is created in the dataframe. This essentially can be used to categorize violations as relatively severe or unsevere. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "390561"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insp_violations_yelp.duplicated().sum()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above illustrates that there are over 390561 rows which contain duplicate data these can then be dropped by the cell below, keeping the first duplicate so one copy of the duplicate data is saved. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp = df_insp_violations_yelp.drop_duplicates(keep='first')"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell below displays df_insp_violations_yelp after all the transformations have been applied."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/html": [
       "<div>\n",
       "<style scoped>\n",
       "    .dataframe tbody tr th:only-of-type {\n",
       "        vertical-align: middle;\n",
       "    }\n",
       "\n",
       "    .dataframe tbody tr th {\n",
       "        vertical-align: top;\n",
       "    }\n",
       "\n",
       "    .dataframe thead th {\n",
       "        text-align: right;\n",
       "    }\n",
       "</style>\n",
       "<table border=\"1\" class=\"dataframe\">\n",
       "  <thead>\n",
       "    <tr style=\"text-align: right;\">\n",
       "      <th></th>\n",
       "      <th>name</th>\n",
       "      <th>city</th>\n",
       "      <th>state</th>\n",
       "      <th>zip</th>\n",
       "      <th>facility_type</th>\n",
       "      <th>health_inspections_score</th>\n",
       "      <th>yelp_rating</th>\n",
       "      <th>review_count</th>\n",
       "      <th>price_dollars</th>\n",
       "      <th>violation_type</th>\n",
       "      <th>point_value</th>\n",
       "      <th>cdc_risk_factor</th>\n",
       "      <th>num_critical</th>\n",
       "      <th>num_non_critical</th>\n",
       "      <th>violation_severity</th>\n",
       "    </tr>\n",
       "  </thead>\n",
       "  <tbody>\n",
       "    <tr>\n",
       "      <th>0</th>\n",
       "      <td>taste of china</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>276**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1</th>\n",
       "      <td>taste of china</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>276**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>r</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>14</th>\n",
       "      <td>taste of china</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>276**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>r</td>\n",
       "      <td>0</td>\n",
       "      <td>Improper Holding</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>17</th>\n",
       "      <td>taste of china</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>276**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>18</th>\n",
       "      <td>taste of china</td>\n",
       "      <td>raleigh</td>\n",
       "      <td>NC</td>\n",
       "      <td>276**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.0</td>\n",
       "      <td>4</td>\n",
       "      <td>30.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>0</td>\n",
       "      <td>Improper Holding</td>\n",
       "      <td>4</td>\n",
       "      <td>8</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>...</th>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "      <td>...</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063780</th>\n",
       "      <td>wendy's #6324</td>\n",
       "      <td>morrisville</td>\n",
       "      <td>NC</td>\n",
       "      <td>275**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>2.5</td>\n",
       "      <td>3</td>\n",
       "      <td>10.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>3</td>\n",
       "      <td>1</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063783</th>\n",
       "      <td>wendys 6301</td>\n",
       "      <td>apex</td>\n",
       "      <td>NC</td>\n",
       "      <td>275**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>0</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063786</th>\n",
       "      <td>wendys 6301</td>\n",
       "      <td>apex</td>\n",
       "      <td>NC</td>\n",
       "      <td>275**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>1</td>\n",
       "      <td>Improper Holding</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063788</th>\n",
       "      <td>wendys 6301</td>\n",
       "      <td>apex</td>\n",
       "      <td>NC</td>\n",
       "      <td>275**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>vr</td>\n",
       "      <td>1</td>\n",
       "      <td>NaN</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "    <tr>\n",
       "      <th>1063789</th>\n",
       "      <td>wendys 6301</td>\n",
       "      <td>apex</td>\n",
       "      <td>NC</td>\n",
       "      <td>275**</td>\n",
       "      <td>Restaurant</td>\n",
       "      <td>97.0</td>\n",
       "      <td>3.5</td>\n",
       "      <td>4</td>\n",
       "      <td>10.0</td>\n",
       "      <td>cdi</td>\n",
       "      <td>0</td>\n",
       "      <td>Poor Personal Hygiene</td>\n",
       "      <td>5</td>\n",
       "      <td>2</td>\n",
       "      <td>0</td>\n",
       "    </tr>\n",
       "  </tbody>\n",
       "</table>\n",
       "<p>155309 rows × 15 columns</p>\n",
       "</div>"
      ],
      "text/plain": [
       "                   name         city state    zip facility_type  \\\n",
       "0        taste of china      raleigh    NC  276**    Restaurant   \n",
       "1        taste of china      raleigh    NC  276**    Restaurant   \n",
       "14       taste of china      raleigh    NC  276**    Restaurant   \n",
       "17       taste of china      raleigh    NC  276**    Restaurant   \n",
       "18       taste of china      raleigh    NC  276**    Restaurant   \n",
       "...                 ...          ...   ...    ...           ...   \n",
       "1063780   wendy's #6324  morrisville    NC  275**    Restaurant   \n",
       "1063783     wendys 6301         apex    NC  275**    Restaurant   \n",
       "1063786     wendys 6301         apex    NC  275**    Restaurant   \n",
       "1063788     wendys 6301         apex    NC  275**    Restaurant   \n",
       "1063789     wendys 6301         apex    NC  275**    Restaurant   \n",
       "\n",
       "         health_inspections_score  yelp_rating  review_count  price_dollars  \\\n",
       "0                            97.0          3.0             4           30.0   \n",
       "1                            97.0          3.0             4           30.0   \n",
       "14                           97.0          3.0             4           30.0   \n",
       "17                           97.0          3.0             4           30.0   \n",
       "18                           97.0          3.0             4           30.0   \n",
       "...                           ...          ...           ...            ...   \n",
       "1063780                      97.0          2.5             3           10.0   \n",
       "1063783                      97.0          3.5             4           10.0   \n",
       "1063786                      97.0          3.5             4           10.0   \n",
       "1063788                      97.0          3.5             4           10.0   \n",
       "1063789                      97.0          3.5             4           10.0   \n",
       "\n",
       "        violation_type  point_value        cdc_risk_factor  num_critical  \\\n",
       "0                  cdi            0                    NaN             4   \n",
       "1                    r            1                    NaN             4   \n",
       "14                   r            0       Improper Holding             4   \n",
       "17                 cdi            1                    NaN             4   \n",
       "18                 cdi            0       Improper Holding             4   \n",
       "...                ...          ...                    ...           ...   \n",
       "1063780            cdi            1                    NaN             3   \n",
       "1063783            cdi            0                    NaN             5   \n",
       "1063786            cdi            1       Improper Holding             5   \n",
       "1063788             vr            1                    NaN             5   \n",
       "1063789            cdi            0  Poor Personal Hygiene             5   \n",
       "\n",
       "         num_non_critical  violation_severity  \n",
       "0                       8                   0  \n",
       "1                       8                   0  \n",
       "14                      8                   0  \n",
       "17                      8                   0  \n",
       "18                      8                   0  \n",
       "...                   ...                 ...  \n",
       "1063780                 1                   0  \n",
       "1063783                 2                   0  \n",
       "1063786                 2                   0  \n",
       "1063788                 2                   0  \n",
       "1063789                 2                   0  \n",
       "\n",
       "[155309 rows x 15 columns]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insp_violations_yelp"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "iVBORw0KGgoAAAANSUhEUgAAAV8AAAFfCAYAAADptc+BAAAABHNCSVQICAgIfAhkiAAAAAlwSFlzAAALEgAACxIB0t1+/AAAADh0RVh0U29mdHdhcmUAbWF0cGxvdGxpYiB2ZXJzaW9uMy4xLjEsIGh0dHA6Ly9tYXRwbG90bGliLm9yZy8QZhcZAAAgAElEQVR4nO3de5icZX3/8fdnZw/J5gCBJEiTWEgNRvCAuKL+0DQWaoP6Q+lBoa1a0RJbxNPPq0JbT6iXtJ7xmJTioSpKbSm0BZVYY8pVEBcMJ40QEmwWIrsxMcfNHma+vz+eZ+Nks4fJ7szeO5PP67qWnbnnmZnvsrufvXM/93PfigjMzGxqNaUuwMzsWOTwNTNLwOFrZpaAw9fMLAGHr5lZAs2pC6iVVatWxbe//e3UZZiZaaTGhu357tixI3UJZmajatjwNTObzhy+ZmYJOHzNzBJw+JqZJeDwNTNLwOFrZpaAw9fMLAGHr5lZAg5fM7MEGvbyYrN68MIPr6Nrd1/qMqqqvaXAm357KW8577TUpUxr7vmaJdKIwQtwYKDIJ7/3MNeseyh1KdOaw9cskUYMXshWkSkFXHv71tSlTGsOXzOrif39xdQlTGsOXzOriVmthdQlTGsOX7NEFh/XlrqEmgigSfDGF56aupRpzeFrlsjtV57XkAHc3lLgbecu82yHcXiqmVlCt195XuoSLJGa9XwlXSepW9IDZW3flLQx/3hU0sa8/RRJvWWPfaHsOc+RdL+kzZKukTTilhxmZvWklj3fLwGfAb4y1BARrx66LeljwO6y4x+JiDNHeJ3PA5cCdwK3AKuAW2tQr5nZlKlZzzciNgA7R3os772+Crh+rNeQdDIwNyLuiIggC/JXVrtWM7OpluqE24uAJyLi4bK2UyX9WNIPJL0ob1sEdJUd05W3jUjSpZI6JXX29PRUv2ozsypJFb4Xc3ivdzvw5Ih4NvAO4OuS5jLylssx2otGxNqI6IiIjgULFlS1YDOzapry2Q6SmoHfB54z1BYRfUBffvtuSY8Ap5H1dBeXPX0x8PjUVWtmVhsper7nAZsi4tBwgqQFkgr57aXAMmBLRGwH9kp6fj5O/FrgpgQ1m5lVVS2nml0P3AE8VVKXpDfkD13EkSfaVgD3SboX+BbwpogYOln3F8C1wGbgETzTwcwagLJJBI2no6MjOjs7U5dhZjbitQm+vNjMLAGHr5lZAg5fM7MEHL5mZgk4fM3MEnD4mpkl4PA1M0vA4WtmloDD18wsAYevmVkCDl8zswQcvmZmCTh8zcwScPiamSXg8DUzS8Dha2aWgMPXzCwBh6+ZWQIOXzOzBBy+ZmYJOHzNzBJw+JqZJeDwNTNLwOFrZpaAw9fMLAGHr5lZAg5fM7MEHL5mZgk4fM3MEnD4mpklULPwlXSdpG5JD5S1vU/SY5I25h8vLXvsSkmbJf1M0u+Vta/K2zZLuqJW9ZqZTaVa9ny/BKwaof0TEXFm/nELgKTTgYuAM/LnfE5SQVIB+CxwPnA6cHF+rJlZXWuu1QtHxAZJp1R4+CuAb0REH7BV0mbg7PyxzRGxBUDSN/Jjf1Llcs3MplSKMd83S7ovH5aYl7ctAraVHdOVt43WPiJJl0rqlNTZ09NT7brNzKpmqsP388BvAWcC24GP5e0a4dgYo31EEbE2IjoiomPBggWTrdXMrGZqNuwwkoh4Yui2pH8A/iO/2wUsKTt0MfB4fnu0djOzujWlPV9JJ5fdvRAYmglxM3CRpDZJpwLLgLuAHwHLJJ0qqZXspNzNU1mzmVkt1KznK+l6YCUwX1IX8F5gpaQzyYYOHgVWA0TEg5JuIDuRNghcFhHF/HXeDHwHKADXRcSDtarZzGyqKGLUIdS61tHREZ2dnanLMDMb6dyVr3AzM0vB4WtmloDD18wsAYevmVkCDl8zswQcvmZmCTh8zcwScPiamSXg8DUzS8Dha2aWgMPXzCwBh6+ZWQIOXzOzBBy+ZmYJOHzNzBJw+JqZJeDwNTNLwOFrZpaAw9fMLAGHr5lZAg5fM7MEHL5mZgk4fM3MEnD4mpkl4PA1M0vA4WtmloDD18wsAYevmVkCDl8zswRqFr6SrpPULemBsraPSNok6T5JN0o6Pm8/RVKvpI35xxfKnvMcSfdL2izpGkmqVc1mZlOllj3fLwGrhrXdBjw9Ip4JPARcWfbYIxFxZv7xprL2zwOXAsvyj+GvaWZWd2oWvhGxAdg5rO27ETGY370TWDzWa0g6GZgbEXdERABfAV5Zi3rNzKZSyjHfS4Bby+6fKunHkn4g6UV52yKgq+yYrrxtRJIuldQpqbOnp6f6FZuZVUmS8JX0N8Ag8LW8aTvw5Ih4NvAO4OuS5gIjje/GaK8bEWsjoiMiOhYsWFDtss3MqqZ5qt9Q0uuAlwPn5kMJREQf0JffvlvSI8BpZD3d8qGJxcDjU1uxmVn1TWnPV9Iq4F3ABRFxoKx9gaRCfnsp2Ym1LRGxHdgr6fn5LIfXAjdNZc1mZrVQs56vpOuBlcB8SV3Ae8lmN7QBt+Uzxu7MZzasAK6SNAgUgTdFxNDJur8gmzkxk2yMuHyc2MysLin/l3/D6ejoiM7OztRlmJmNeG2Cr3AzM0vA4WtmloDD18wsAYevmVkCDl8zswQcvmZmCTh8zcwScPiamSXg8DUzS8Dha2aWgMPXzCwBh6+ZWQIOXzOzBBy+ZmYJOHzNzBJw+JqZJTBu+Er6o0razMyscpX0fK+ssM3MzCo06h5uks4HXgosknRN2UNzybZ9NzOzCRprA83HgU7gAuDusva9wNtrWZSZWaMbNXwj4l7gXklfj4iBKazJzKzhVbJ1/NmS3gf8Zn68gIiIpbUszMyskVUSvv9INsxwN1CsbTlmZseGSsJ3d0TcWvNKzMyOIZWE7/clfQT4V6BvqDEi7qlZVWZmDa6S8H1e/rmjrC2A36l+OWZmx4ZxwzciXjwVhZiZHUvGDV9J7xmpPSKuqn45ZmbHhkqGHfaX3Z4BvBz4aW3KMTM7NlQy7PCx8vuSPgrcXLOKzMyOARNZUrIdqOgCC0nXSeqW9EBZ2wmSbpP0cP55Xt4uSddI2izpPklnlT3ndfnxD0t63QRqNjObVipZUvL+PAzvk/Qg8DPgUxW+/peAVcPargC+FxHLgO/l9wHOB5blH5cCn8/f/wTgvWSzLs4G3jsU2GZm9aqSMd+Xl90eBJ6IiIpWNYuIDZJOGdb8CmBlfvvLwHrgXXn7VyIigDslHS/p5PzY2yJiJ4Ck28gC/fpKajAzm47G7flGxM+B44H/C1wInD7J9zwpIrbnr70dWJi3LwK2lR3XlbeN1n4ESZdK6pTU2dPTM8kyzcxqp5Jhh7cCXyMLyYXA1yRdXoNaNEJbjNF+ZGPE2ojoiIiOBQsWVLU4M7NqqmTY4Q3A8yJiP4CkvwPuAD49wfd8QtLJEbE9H1boztu7gCVlxy0mW1O4i18PUwy1r5/ge5uZTQuVzHYQh69mVmTk3milbgaGZiy8DriprP21+ayH55Mt6LMd+A7wEknz8hNtL8nbzMzqViU93y8CP5R0Y37/lWTLTI5L0vVkvdb5krrIZi1cDdwg6Q3A/wJDm3HeQrZt0WbgAPB6gIjYKekDwI/y464aOvlmZlavlE0uGOegbM7tC8l6vBsi4se1LmyyOjo6orOzM3UZZmYjjhSMtYHmc4H5EXFrvnzkPXn7BZKaIuLu0Z5rZmZjG2vM9yOMvIbDT/LHzMxsgsYK3xMj4tHhjRGxGTixZhWZmR0DxgrfmWM8NqvahZiZHUvGCt91kj4k6bDBYknvB/6rtmWZmTW2saaa/T/gWmCzpI1527OATuCNtS7MzKyRjRq++RVtF0taCpyRNz8YEVumpDIzswZWyWLqWwAHrplZFU1kMXUzM5skh6+ZWQKVLCl5laTfleTpZWZmVVJJz/dR4GKgU9Jdkj4m6RW1LcvMrLFVspPFdRFxCfBi4Ktkq5B9tdaFmZk1snFnO0i6lmzroCeA/wb+kHyRHTMzm5hKhh1OBArAr4CdwI5KN9A0M7ORVTLP90IASU8Dfg/4vqRCRCyudXFmZo2qkmGHlwMvAlYA88jWdfjvGtdlZtbQKtlG6HxgA/CpiHi8xvWYmR0TKpntcBlwJ9lJNyTNlDSn1oWZmTWySi6y+HPgW8CavGkx8G+1LMrMrNFVMtvhMuAcYA9ARDwMLKxlUWZmja6S8O2LiP6hO5KagfG3PDYzs1FVEr4/kPTXwExJvwv8M/DvtS3LzKyxVRK+VwA9wP3AauAW4G9rWZSZWaOr5CKLEvAP+YeZ1aH1m7r52xvvo2t335S9Z0FQnOAA5fzZreza3z/q8+e0FXj6ouNZvWIpK5fX5ymoUcNX0g0R8SpJ9zPCGG9EPLOmlZlZVazf1M3l19/D3r7ilL7vRIMXYMe+/jEf39tXZNMvdvOemx/kKqjLAB6r5/vW/PPLp6IQM6uNNRu2sL9/aoN3KuzuHeSEWW2s2bClscI3IrbnN38fuCEiHpuaksysmrbtOkCpAecnlQJmthTo2nUgdSkTUskJt7nAdyX9t6TLJJ1U66LMrHqWzGunSamrqL4mQe9AkcXz2lOXMiGVXF78/og4g+xii98gm3q2ruaVmVlVrF6xlFmthdRlVN1xM5sZKAarVyxNXcqEHM0Gmt3AL4BfMokr3CQ9VdLGso89kt4m6X2SHitrf2nZc66UtFnSzyT93kTf2+xYtHL5Qj598VksPq5tSt+3MIne9vzZrWM+f05bgeVPOo6rLjijLsd7ARQx9mCQpL8AXg0sIFvj4ZsR8ZOqvLlUAB4Dnge8HtgXER8ddszpwPXA2WQ973XAaREx5hmEjo6O6OzsrEaZZmaTMeKfkUqWlPxN4G0RsbG69QBwLvBIRPxcGvXP3CuAb0REH7BV0mayIL6jBvWYmU2JSsZ8rwBmS3o9gKQFkk6t0vtfRNarHfJmSfdJuk7SvLxtEbCt7JiuvO0Iki6V1Cmps6enp0olmplVXyU7WbwX6ACeCnwRaCHbvficybyxpFbgAuDKvOnzwAfILuj4APAx4BJG7rKPOFYSEWuBtZANO0ymPrNGsX5TN+/8543s2D8w4uOTuRJtqg2vtaUJLv+dZbzlvNPSFTVBlZxwu5AsJPcD5LtZVGMx9fOBeyLiifx1n4iIYtnlzGfnx3UBS8qetxjwjhpmFVi/qZu//NrdowYv1E/wwpG1DpTg4+se5pp1D6UpaBIqCd/+yM7KBYCkWVV674spG3KQdHLZYxcCD+S3bwYuktSWD3csA+6qUg1mDW3Nhi0cGCilLqPmrr19a+oSjlolJ9xukLQGOD7f1eIS4NrJvKmkduB3yVZJG/L3ks4kC/lHhx6LiAcl3QD8BBgELhtvpoOZZbbV6dVfR6seL5+uZFWzj+br+O4hG/d9T0TcNpk3jYgDwInD2l4zxvEfAj40mfc0OxYtmddO167e1GXUXD1eRFJJz5c8bG+DbG6upD+JiK/VtDIzm7TVK5Zy77ZdDT/08MYXVmsC1tQZdcxX0tz8yrLPSHqJMm8GtgCvmroSzWyiVi5fyOf+5DnMn9Uy6jGTuRJtqg2vtaUJ3nFefc52GPUKN0k3AbvILmY4F5gHtAJvrdEFF1XlK9zMbJo46ivclkbEMwAkXQvsAJ4cEXtrUJyZ2TFlrKlmhyYG5rMLtjp4zcyqY6ye77Mk7clvi2z34j357YiIuTWvzsysQY21k0X9zd0wM6sTR7Oer5mZVYnD18wsAYevmVkCDl8zswQqurzYzKpv/aZu3vmte9mxr/+wdjHygtWzW5s4OBgMjrEP/FBvKvXFxO0tBd7020vr8sqzqeLwNUtg/aZu/vLr93BghNW4RovWff3jR2rq0B1yYKDIJ7/3MIADeBQedjBLYM2GLSMGbyMpRX2usztVHL5mCXidXXP4miWwZF576hKmRD2usztVHL5mCaxesZT2Bg+mJtXnOrtTxeFrlsDK5Qv53B+fxfzZrUc8NtryurNbm2huGnvx3Samxy91e0uBt51bn+vsTpXp8H0yO2bNGGEl87FmOwyWgsXHtTF3xsgTlUrUfsbDeKEh4IT2Zp65+PgaV1LfHL5mCazf1M3l199D1+6+o35u1+4+9hwcrEFVlRkv3IOsxsuvv4f1m7qnoqS65PA1S2DNhi0NPxNgf3+RNRu2pC5j2nL4miWwbdcBxrhQrSGUArqOkSl1E+HwNUtgybx2xjl3VveaBIuPkSl1E+HwNUtg9YqlDT8HdlZrgdUrlqYuY9py+JolsHL5Qj598VksPq7tqJ871myHqVDJbIfFx7Xx6YvPYuXyhVNRUl0adev4euet481smhhxgMk9XzOzBBy+ZmYJOHzNzBJINmov6VFgL1AEBiOiQ9IJwDeBU4BHgVdFxC5JAj4FvBQ4APxZRNyTom6zWrtm3UNce/tW9h4cpKlJzGotcMZvHHdo5sCaDVvYtusAS+a1s3rFUlYuX8j6Td387Y338djuPoJskHF2WxODJTg4UDr0OouOn8negwP05LtnnHpiO1ec/7QjToxds+4hvvCDLRwYOPJCkLbmJs5achz3Prbn0JrEBcFpJ83hXauW+yRbhZKdcMvDtyMidpS1/T2wMyKulnQFMC8i3iXppcDlZOH7POBTEfG8sV7fJ9ysXly85n+4Y+uuo36egLZmMXtGyxFbEaX0tCc5hIepixNurwC+nN/+MvDKsvavROZO4HhJJ6co0KyaJhq8kK2hcHAwplXwAmzu3st7bn7Q6zqMI2X4BvBdSXdLujRvOykitgPkn4f+dC4CtpU9tytvM6trEw3e6WygBL/Y3cvVt/40dSnTWsrwPScizgLOBy6TtGKMY0fqth8xXiLpUkmdkjp7enqqVadZTVyz7qHUJdRMfzF4qHufe79jSBa+EfF4/rkbuBE4G3hiaDgh/zz0nesClpQ9fTHw+AivuTYiOiKiY8GCBbUs32zSvvCDxl7xqxR4VbMxJAlfSbMkzRm6DbwEeAC4GXhdftjrgJvy2zcDr1Xm+cDuoeEJs3o10kyCRuNVzUaXaqrZScCN2QwymoGvR8S3Jf0IuEHSG4D/Bf4oP/4WspkOm8mmmr1+6ks2qy4JGvTq/kO8qtnokoRvRGwBnjVC+y+Bc0doD+CyKSjNbMosOm4GXb86mLqMmmkpyKuajWG6TTUzO2Z88JXPoHWEPdwaQZPg8hc/xXN9x5BuXTqzY9zK5QtZ+5oO3n3TA3Tt6i27Mq3A0xcdzwuWnsAt92/nkZ79DJaC5oL4rfmzeOkzTuaOLTt5+Ik99BezcYvBYnBwsEhE9hozWgq0txVYtnAOL1h6wmHHtzY3MX9WK5LY1zfI4nntvGDpCdz6wC/YsmM/xVKJ1kKB5vwPQ0RQDOgfLCKJ5ibR3ARS06HX2t9fpHtvth/daFfN2eG8pKSZWW3VxRVuZmbHBIevmVkCHvM1S2T9pm7efdMDbNvVO+ZxrU1ioBRI2b9fA0bd+bhJ0CzRP87WyCe2N7PrwCClYe1Drw9Zz2zRvJkc6BvglwcGjzjuqSfN4uc7e+kdKB3W3twknrJwthfXGYfHfM0SWL+pm7d+88fs7h0c/+A6VBCcMKuVj/zhsxzAHvM1mz7WbNjSsMELWc9878FBX148BoevWQLbGvyy2wAGSyVfXjwGj/maJbBkXjtd44z11rvBEmzb1cspV/xnzd5j8XFtfPDCZ9bl0IZ7vmYJrF6xlIJ/+yata3cfl19/T10uXelvv1kCK5cv5IJnejOWatjfX6zLsWWHr1kC6zd1c+NGr4paDaWoz6UrPeZrNoKn/s1/0tf4y+1aQu75mg3j4K0/O/b1pS7hqDl8zYZx8NafodXd6onD18zq3qzWQuoSjprD18zq3htfeGrqEo6aw9dsmMbcW6JxHTezmWcuPj51GUfN4Ws2zKJ5M1OX0FAKTWJGS1NN/qg1CebPbqvLeb6eamY2zJJ57bQ1N9He+utfj4e790LAspPmHGo70D/IwjkzuP7S57N+UzfvuflBWgpiZkuB3oEiA8XgqgvOGPHS11pecjvdFEtBk369VGU1lQJmthTqcp6ve75mw6xesZSBYnCgf5CI7PPstmbmzGg+rG2gGId25125fCFXXXAGC+fMYHfvAAvnzBg1eCFbcvFYMlCj2QgCegeKdblFvXu+ZsOsXL6Qq8iWfezadYDF89p598tOh2Ftq1csPSxcVy5fWPECLyfPbaNrd/3NTZ1ugmyO79D3p544fM1GMFqQVm31rCb/o7NaDvQNelUzM6vMkjr8Z/J0NVCiLlc1c8/X6saqT6xn0xP7U5dh09CaDVvqrvfrnq/VBQevjaZJXtXMrGYcvDaSgqClucmzHczMKlG+Rf3RPEfK5vYWlF28UQqY3dZ8aMpfPXH4mtmUmT+rhRctm8/3NvWw9+AgTU2irTkb/TzYX6Q07PhCk2gCWgpNtLc2MX92G/v7i3TvzabpPWV+O1ec/7S6G++FBOEraQnwFeBJQAlYGxGfkvQ+4M+BnvzQv46IW/LnXAm8ASgCb4mI70x13ZbW8pNmeeihTj169ctSlzAtKWJq18GUdDJwckTcI2kOcDfwSuBVwL6I+Oiw408HrgfOBn4DWAecFhFjrrra0dERnZ2dtfgSLBGfdKs/zYJCvlPoglktzJnZyt6+QZbkF6kA/N23N7Flx35KETQ3ifbWAqedNJcXLD2BO7bsZNuuA8xuLRzW4z31xLrq8Y54PeOUh+8RBUg3AZ8BzmHk8L0SICI+nN//DvC+iLhjrNd1+NpEXbzmf7hj667UZTSMgrKx2sFSNr1qyQkzaS40sbt3gIFiif19RSAYzMccmgRzZzSzt6/IwjmttBaa6NrVS3HYWO/x7S189A+fVQ8BPGL4Jp1qJukU4NnAD/OmN0u6T9J1kublbYuAbWVP68rbRnq9SyV1Surs6ekZ6RCzMTl4qy/ITpIBhGDHvn7aW5vZ1zfInt7BQ2E6lFARsOfgIE2CPb2D7NjXf+jxAApNTRQk9vUN1uVqZkOSnXCTNBv4F+BtEbFH0ueBD5D9//0A8DHgEkb+qzFidz0i1gJrIev51qJuS+eadQ/x2fWP0Dc4/LSMTWelst/EiGyr94ef2MtAKQiyXnEEh9I18uNaBP3F7HsdZc/vHchGHFXMV5urU0l6vpJayIL3axHxrwAR8UREFCOiBPwD2RgvZD3dJWVPXww8PpX1WnrXrHuIT6x72MHbIA4OliiWIsvbyAJ4KGFFNvRQCmgtZL3ckQSw9+BgXV5aDAnCV5KAfwR+GhEfL2s/ueywC4EH8ts3AxdJapN0KrAMuGuq6rXp4drbt9ZkPVhLq0lHrverfMy3FDB3ZjOl0uh/cOe1t9Tt0EOKYYdzgNcA90vamLf9NXCxpDPJvgePAqsBIuJBSTcAPwEGgcvGm+lgjWd/v7/ljag4NMZQphSwu3cQATv39dM/SvaKbBeLery0GBKEb0TczsjjuLeM8ZwPAR+qWVE27c1qLbDn4GDqMmyKBFmvuG+cRdh/ub+PU06cPTVFVZkX1rG68MYXnuqNLY8x421+EcD23X08aW7rlNRTbQ5fqwtvOe803n7eskOXopoNuXHjdq5Z91DqMo6af5Ktbnzcsx1sFF+ow5NuDl+rC8fSbr929A7U4QlZh6+Z1b1RpgJPa15S0qpi/aZu1mzYwrZdB1gyr/3QoigPPr573FkKTYK25iaEODhYPOyKKIDWpjr8zbIpdcLM+ouy+qvYpp31m7p5z80P0lIQx89sYeuOfdz16E5mtjSxr2/8fw6WAnoHRh/L7R+exmbDLJw7M3UJR83ha5O2ZsMWWgqivTX7cdqbL4pSSfCaTVZrE+zrq7854B7ztUnbtusAM1sKh+73F0t4pMCmSn8puwin3jh8bdKWzGs/tNIUZIuheKTAppLq8Iybw9cmbfWKpQwUgwP9g0QEc/JFUWa31V9vxOrT5jpcWtJjvjZpK5cvpHTjfTyys++wdo/52lQZ43zttOWer03aqk+sp2t33/gHmtkhDl+bNG9qaXb0HL5mZgl4zLfBrd/UzdW3/pTNPfsoBjRLPOm4GUSpxC/29lPMpyUIaClkGxkO7e0SKG9vYmZrEzNbCuzcP0BfsURrQcxqa2b3gYGEX51Z/XL4NrD1m7p557fuZee+fobORwxEsG1X7xHHBiMtXJ3dHygV6R0oEmRB2wT0loLegf6a1W7W6Dzs0MDWbNjCvr7Bw/bGmoiyvQ0RUIcnls2mHfd8G9i2XQco5ttzmzW6i9feyeoVS1m5fOGoxwwtAPXg47vZ31+kVMrmpZ+7fAGbfrGPLTv2UyyVaC0UaG8rsGzhnHFfc6IU0Zi/mh0dHdHZ2Zm6jKQuXnsnP962i76BEkHW853It3t4z7cxf2Ks3s1oaaJvoAT69Xb0i+a28cELn8nK5Qu5Zt1DfHb9I/QPlkb9GS7/+S4IFs5to6VQ4KoLzphMAI/4b04POzSw1SuWMrut+dB3fqJ/Z4fOwQ3d9g+NTUcDeagO/ZxHQNfuPi6//p5DwVuKsf8lOHx4bU/vIC0F1WR7ev8eNbgZBVVljLb8B9ZjvjYdjbbh5v7+ItfevpViKSgczYmPyBaJmtlSqMn29B7zbVBDMx127feMBDu2lSIL4BnNTQyOtyVyOWWLRPUOFFk8r73qdbnn26DWbNjCzn39426/bdbompQtOTlnRjMlgkIFnd+h4bW5M5sZKAarVyytfl1Vf0WbFu5/bJeHB8zIer57Dg7yiz19DBSj4g5JMWD77j7+d+cB1vxgc9Xrcvg2qN4Bd3nNquWOrbt44YfXVfU1Hb4NqlGnEJql0rW7j2vWPVS11/MJtwSuWfcQH1/3cOoyzOwoXXv7Vt5y3mlVeS33fKeYg9esfu3vr94GAe75llm/qZu/+/YmHnpi7xGD8sr/M7QqWG//IDv2j76i1/KTZrHv4CCP7e7zFWFmDaJYxc0J6yZ8Ja0CPgUUgGsj4upqvv76Td382Zd+NOrjkf9ntFXBhvMC42Y2lroYdpBUAD4LnA+cDlws6fRqvsdYwWtmVm11Eb7A2cDmiNgSEf3AN8wEvXIAAAXJSURBVIBXJK7JzGzC6iV8FwHbyu535W2HkXSppE5JnT09PVNWnJnZ0aqX8B3pgsAjRr4jYm1EdEREx4IFC6agLDOziamX8O0ClpTdXww8nqgWM7NJq5fw/RGwTNKpklqBi4Cbq/kGj179smq+nJk1oGrmRF1MNYuIQUlvBr5DNtXsuoh4sNrv4wA2s6lSF+ELEBG3ALekrsPMrBrqZdjBzKyhOHzNzBJw+JqZJeDwNTNLwOFrZpaAw9fMLAGHr5lZAg5fM7ME1KgbLUrqAX6euo5xzAd2pC6iivz1TG/+etLYERGrhjc2bPjWA0mdEdGRuo5q8dczvfnrmV487GBmloDD18wsAYdvWmtTF1Bl/nqmN38904jHfM3MEnDP18wsAYevmVkCDt8EJF0nqVvSA6lrqQZJSyR9X9JPJT0o6a2pa5oMSTMk3SXp3vzreX/qmiZLUkHSjyX9R+paqkHSo5Lul7RRUmfqeibCY74JSFoB7AO+EhFPT13PZEk6GTg5Iu6RNAe4G3hlRPwkcWkTIknArIjYJ6kFuB14a0Tcmbi0CZP0DqADmBsRL09dz2RJehToiIh6uMhiRO75JhARG4CdqeuolojYHhH35Lf3Aj8FFqWtauIisy+/25J/1G0vRdJi4GXAtalrsV9z+FpVSToFeDbww7SVTE7+z/SNQDdwW0TU89fzSeCvgFLqQqoogO9KulvSpamLmQiHr1WNpNnAvwBvi4g9qeuZjIgoRsSZwGLgbEl1OTwk6eVAd0TcnbqWKjsnIs4Czgcuy4fy6orD16oiHxv9F+BrEfGvqeuploj4FbAeOGJhlDpxDnBBPkb6DeB3JH01bUmTFxGP55+7gRuBs9NWdPQcvjZp+QmqfwR+GhEfT13PZElaIOn4/PZM4DxgU9qqJiYiroyIxRFxCnAR8F8R8aeJy5oUSbPyE7tImgW8BKi7mUMO3wQkXQ/cATxVUpekN6SuaZLOAV5D1qvamH+8NHVRk3Ay8H1J9wE/IhvzbYgpWg3iJOB2SfcCdwH/GRHfTlzTUfNUMzOzBNzzNTNLwOFrZpaAw9fMLAGHr5lZAg5fM7MEHL5WN5S5XdL5ZW2vkjTqNKN8Kt/xR/EeX5W0NZ8ud6+kF1fwnEskPans/hclPbXS97Rjk8PX6kZk8yLfBHw8X/ZxFvAh4LIqv9Xb80uL3wl8roLjLwEOhW9EvD4iflblmqzBOHytrkTEA8C/A+8C3ku2LOcjkl6Xr8G7UdLnJB32sy3pKfnavP+UrwN7Q3712ljuoGx1Nknvl/QjSQ9I+kLeE381cCbwzfy9W/Pe+ZmSmiX9StLVeS/6DkkL89daJumHec0fkPSrav5/sunP4Wv16P3AH5MtqvL3+aI3FwL/J++xNpNdSjvc6cBnI+IZwEFg9Tjvswr4t7L7n4qI5wLPAI4DVkXEN4GNwKsj4syI6B/2GscBP4iIZ5GF+SV5+6eBj0bE2cATlXzR1lgcvlZ3ImI/8E3gnyKij2zthecCnfkykL8N/NYIT91atiD6V4EXjvIWn5C0Ffgi8OGy9nMl3QXcm7/HGRWU2xsRt+a37wZOyW8/j2whIoCvV/A61mCaUxdgNkElfr0+rYDrIuLd4zxn+LX0o11b/3ayoY23A18CniepHfgMcFZEPCbpg8CMCuos7wkX8e+c5dzztUawDniVpPkAkk6U9OQRjjtV0nPz2xeTbQ80oogoAh8D2iWdC8wkC/sd+Ypaf1B2+F5gzlHWfBfZUAmMPERiDc7ha3UvIu4nGwdel69E9l2yla+GexD48/yYWcDacV43gA8CfxURvwS+TLZ04Y0cvlPHF4Frh064VVj2W4B35cMYC4HdFT7PGoRXNbNjgqSnAN/KT8gll0+TOxARIelPgQsj4g/Ge541Do8/maXxXOCT+ZS4XcDrE9djU8w9XzOzBDzma2aWgMPXzCwBh6+ZWQIOXzOzBBy+ZmYJ/H8MMg8BV32LIwAAAABJRU5ErkJggg==\n",
      "text/plain": [
       "<Figure size 360x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.lmplot(x = 'yelp_rating',y = 'review_count',data = df_insp_violations_yelp,fit_reg = False, height = 5 , aspect = 1, x_jitter = 0.5, y_jitter = 0.5)\n",
    "plt.xlabel('Yelp Rating')\n",
    "plt.ylabel('Review Count');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Essentially the cell above is here to determine if any of the Yelp Data needs to be further modified to be less biased. In theory Cells with low review counts would either perform very well or very poorly if the data was completely biased, but the values are filled in across the lower review count. This means there is an equal amount of resturants with a low amount of ratings in each category of the Yelp rating statistic. Therefore there likely doesn't exist a statistically significant amount of bias in the data set, as with publically reviewed things the bias would balance out with more reviews. However, there is a slight trend in a higher rating as the amount of reviews increase."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Before moving on to visualizing and testing the hypothesis it was important for me to visualize the data distributions for both the 'point_value' and 'yelp_rating' columns. Which will be shown in the cells below. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_insp_violations_yelp['point_value'].plot.hist(bins = 10)\n",
    "f1 = plt.gcf()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above shows the distribution of data for the 'point_value'column in df_insp_violations_yelp. As you can clearly tell the distribution is not normal, and is very positively skewed. Almost all data is below the severity threshold I established earlier and almost all of the dat is within the 0 or 1 point range."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([0, 1, 3, 2, 4])"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df_insp_violations_yelp['point_value'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "\n",
    "point_value_rank = df_insp_violations_yelp['point_value'].replace({0:1,1:2,2:3,3:4,4:5})\n",
    "\n",
    "df_insp_violations_yelp['point_value_rank'] = point_value_rank\n",
    "\n",
    "size = len(df_insp_violations_yelp['point_value_rank'])-1\n",
    "\n",
    "df_insp_violations_yelp['point_value_rank'] = df_insp_violations_yelp['point_value_rank'].rank(method= 'min').apply(lambda x: (x-1)/size)\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "I tried many different approaches to normalize this distribution. Initially I tried a logarithmic approach, as well as normalization approach which involved me defining a function that essentially subtracted the min value and divided by the max - min. The last approach I tried was Percentile Linearization, which I left depicted in the histogram below. However, every method I attempted failed, and that is because most methods are designed to handle outliers in data or slight skewness, which is not the case for this particular distribution."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_insp_violations_yelp['point_value_rank'].plot.hist(bins = 10)\n",
    "f2 = plt.gcf()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above shows the distribution of data for the 'yelp_rating' column in df_insp_violations_yelp. As you can clearly tell the distribution is not normal as well, and is negatively skewed in this case. It was at this point a realized that a linear regressions test between the two dataframes was likely not possible and I would have to change my approach."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_insp_violations_yelp['yelp_rating'].plot.hist(bins = 10)\n",
    "f3 = plt.gcf()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([5., 7., 9., 6., 8., 4., 3., 1., 2.])"
      ]
     },
     "execution_count": 23,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "yelp_rating_rank = df_insp_violations_yelp['yelp_rating'].replace({1.0:1,1.5:2,2.0:3,2.5:4,3.0:5,3.5:6,4.0:7,4.5:8,5.0:9})\n",
    "\n",
    "df_insp_violations_yelp['yelp_rating_rank'] = yelp_rating_rank\n",
    "\n",
    "df_insp_violations_yelp['yelp_rating_rank'].unique()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "violation_severity_rank = df_insp_violations_yelp['violation_severity'].replace({0:1,1:2})\n",
    "\n",
    "df_insp_violations_yelp['violation_severity_rank'] = violation_severity_rank\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "df_insp_violations_yelp['violation_severity_rank'].plot.hist(bins = 2)\n",
    "f4 = plt.gcf()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Ultimately for this data set a linear regressions test is not possible. This is because the datasets I am analyzing are not normal distributions. Alternatively I will have to use a nonparametric statistical test to test my hypothesis. For these data sets a Mann-Whitney U test is likely the best test for this experiment. Essentially a Mann-Whitney U test will compare the distributions of two data sets of ordinal data and test if they come from an equal distribution. The data for both Yelp rating and Health Violations Point Values are actually ordinal data. Essentially Yelp reviews are rated from 1-5 by halves. There is nothing in between the .0 and .5 values for each rating, and therefore the data is ordinal. In the cell above I essentially changed the way the ratings are scored. Instead of going 1-5 by halves I made a new column called 'yelp_rating_rank' which contains the same data but from 1-9 by ones. Essentially the data is the same, its just the ordinal variables are changed. The point values are also an ordinal, as health inspectors give points to violations from 0-4 by ones. I already made another column called 'point_value_rank'that goes from 1-5 instead of 0-4, 4 being most severe. However, Mann-Whitney U test requires independent test variables to only have two categories. Therefore I will use the 'yelp_rating' column and the'violation_severity_rank'. The violation severity is a categorical variable I created which essentialy rules a violation as relatively severe or relatively not severe based upon the number of points it was scored."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Data Analysis & Results"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cells below will illustrate the results of a Mann-Whitney U test on 'yelp_rating_rank' and 'violation_severity_rank'. provides visualization for the results expressed. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Mann-Whitney U Test"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Statistics=281994799.500, p=0.000\n",
      "reject H0\n",
      "0.0\n"
     ]
    }
   ],
   "source": [
    "stat, p_value = mannwhitneyu(df_insp_violations_yelp['yelp_rating_rank'], df_insp_violations_yelp['violation_severity_rank'])\n",
    "\n",
    "print('Statistics=%.3f, p=%.3f' % (stat, p_value))\n",
    "\n",
    "alpha = 0.05\n",
    "\n",
    "if p_value > alpha:\n",
    "    \n",
    "    print('fail to reject H0')\n",
    "    \n",
    "else:\n",
    "    \n",
    "    print('reject H0')\n",
    "\n",
    "print(p_value)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above runs a Mann-Whitney U test 'yelp_rating_rank' and 'point_value_rank'. As you can see by the print line we reject the null hypothesis in this test because our p value < our alpha. Our p value was interpred strongly here. Because of this we can accept the alternative hypothesis that there is indeed a difference between the respective distributions for Yelp rating and Health Violations Point Value."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 720x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.lmplot(x = 'yelp_rating',y = 'point_value',data = df_insp_violations_yelp,fit_reg = False, height = 5 , aspect = 2, x_jitter = 0.5, y_jitter = 0.5)\n",
    "plt.xlabel('Yelp Rating')\n",
    "plt.ylabel('Violation Point Value');\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above illustrates a scatterplot comparing Violation point Value on the Y axis and Yelp Ratig on the Y. As you can ultimately see there exists no discernable trend or correlation in the data which would be seen if the underlying distributions for each variable were the same. However we can see that for the most part there is a very equal distribution of yelp ratings for each violation point value. Therefore no matter the Violation Point Value the resturaunt has an equal probabilty of being rated anything on Yelp's scale. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 816x360 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "\n",
    "sns.lmplot(x = 'yelp_rating',y = 'point_value',data = df_insp_violations_yelp,fit_reg = False,hue = 'violation_severity', height = 5 , aspect = 2, x_jitter = 0.5, y_jitter = 0.5)\n",
    "plt.xlabel('Yelp Rating')\n",
    "plt.ylabel('Violation Point Value');"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above illustrates another scatter plot comparing Violation point Value on the Y axis and Yelp Ratig on the Y. However, here we have colorized the two variables for severe violation or not sever violation, by orange and blue respectively. We can see here that the trends are parallel, and like before no matter the severity of the violation there is an equal probabilty of being rated anything on Yelp's scale. However, one interesting thing to notate are the few data points that were rated a 4 in the Health Inspections Point Value system. As most of our data was skewed to the lower less severe values, there are very few values that were equal to four, so they are ultimately outliers in our data set. We can see that those few data points were rated on Yelp in the 3.5 - 4.5 data range. This is interesting, because essentially, out of all the data I had the resturaunts who had the most severe health violations were rated fairly high on Yelp."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fd3f3d24ef0>"
      ]
     },
     "execution_count": 29,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x = 'violation_severity', y = 'yelp_rating', data = df_insp_violations_yelp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above is a box plot which compares Yelp rating on the why axis with Violation severity on the x with 0 representing non severe violations, and 1 representing more severe violations. Here we can clearly see there is no variance between the two, and ultimately no discernable relationship. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "<matplotlib.axes._subplots.AxesSubplot at 0x7fd3f3d3a198>"
      ]
     },
     "execution_count": 30,
     "metadata": {},
     "output_type": "execute_result"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "sns.boxplot(x = 'violation_type', y = 'yelp_rating', data = df_insp_violations_yelp)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Above is a box plot which compares Yelp rating on the why axis with Violation Type on the x. Here we can clearly see there is no variance between the two variables, and ultimately no discernable relationship. Initially I ran this test to see if maybe the type of violation played a role in rating as Health inspections categorizes violations as CDI or corrected during inspection, R or repeat, and VR when verification is required. However there was no discernable relationship here either. "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "sns.lmplot(x = 'yelp_rating',y = 'health_inspections_score',data = df_insp_violations_yelp,fit_reg = False, hue = 'violation_severity', height = 5 , aspect = 2, x_jitter = 1, y_jitter = 1)\n",
    "plt.xlabel('Yelp Rating')\n",
    "plt.ylabel('Health Inspections Score');\n",
    "\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "The cell above illustrates a scatterplot omparing Healh Inspections on the Y axis and Yelp Ratig on the Y. The hue is depicted by Vilation severity again.  Essentially on this graph we can see that a few of the outliers in the previos graph likely also scored lower on their Health inspections scores as well, however there is no discernable difference between violation severity and Health Inspections Score or Yelp Rating."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp['yelp_rating'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp['point_value'].mean()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp['violation_severity'].mean()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "We can also see that the datframes come from different distributions by looking at mean values for Yelp Ratings, Violation point values, and Violation severity. We can see that the mean yelp rating is approximately a 3.5 which would be in the upper quantile for the data set while point value and violations are both less than 1 and are in the lower quantiles of the dataset."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "df_insp_violations_yelp.corr()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Finally, the cell below illustrates this datas correlation table. There are some values which show some correlation, but most are values we would expect to show correlation, as the relate to each other or health inspections scores. In terms of correlation for Yelp Ratings there is no variable that presents a negative or positive statistical significance, however the most statistically significant variables are Price and Review Count variables."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Ethics & Privacy"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "In terms of Ethics and Privacy, I had permission to use these datasets as they are publically available, and were given to me by Professor Ellis. Essentially most of the data comes from Wake County's Health Inspections. These inspections are conducted by trained professionals. They are trained to be unbiased. However, Yelp is open to the public and in theory anyone can put biased reviews on the site. Finally, the only privacy concerns are in the Health inspections data as it includes the real names of the health inspectors, as well as the date they visited, and made the inspection.\n",
    "\n",
    "Ultimately to address any biases in the Yelp data I decided to visualize it. In theory if the data was highly biased it would be in the resturaunts that had few reviews. However, the data had an even amount of plots in each yelp rating category for resturants that had low reviews. If the data had only outliers I could have written a line of code that would drop rows with a review_count below a threshold. I experimented with this, but ultimately decided to leave the rows in as the slight trend upward as the amount of views increased seemed like statistically significant data to keep within my data set, especially in regards to future analysis that can be drawn. Ultimtely there will always exist a few biased yelp reviews, but generally these tend to disappear as Yelps population and user database grows, and the distribution normalizes. In regards to privacy concerns with the Health inspections data, all names and personal information about the inspectors was dropped from the data. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Conclusion & Discussion"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Essentially the goal of this study was to try and understand if Yelp ratings could be used as a metric to judge overall food safety.  Studies have been done that meausre the overall effect of health inspections over time on food safety. Essentially these studies saw a rise in mean health inspection scores over the years. Essentially I wanted to know if there is existed a metric that made this data more accesible to the individual. Data suggests that almost a majority of food borne diseases every year are a result the commercial food industry. Typically when I use yelp I am not concerned about food safety, but I am concerned about overall rating. Therefore I wanted to know that if there existed relationship between a resturants Yelp rating and their overall food safety. To quantify this I used data from Wake County's  resturant health inspections violations, and the resturant's respective Yelp ratings. I used violations because any violation in health inspections could result in a food safety issue.\n",
    "\n",
    "The variables I used for my study were Yelp Rating, and Violation Severity. Yelp rating is an ordinal variable ranking a resturant's score or rating on a scale of 1-5 by halves. Violation severity is a categorical variable that rates a violation as relatively severe or not severe based upon the points inspectors gave each violation in their Health inspection. Because my variables were ordinal and not normally distributed, a Mann-Whitney U Test was used, due to the fact that a linear regressions model would not effectively test for a relationship. Essentially a Mann-Whitney U test will compare the distributions of two data sets of ordinal data and test if they come from an equal distribution. A Mann-Whitney U test was conducted with variables Yelp Rating, and Violation Severity.The alpha was set to 0.05, and the calculated p value was epqual to 0.0, therefore rejecting the null hypothesis. This was because the p value <  alpha. Also the mean yelp rating is approximately a 3.465 which would be in the upper quantile for the data set. While point value's mean was0.71 in the lowest quantile of the dataset.Essentially this meant that the data for both Yelp Rating, and Violation Severity came from different distributions. \n",
    "\n",
    "Ultimately there existed no discernable trend or correlation in the data which would be seen if the underlying distributions for each variable were the same. However we can see that for the most part there is a very equal distribution of yelp ratings for each violation point value. Therefore no matter the Violation Point Value the resturaunt has an equal probabilty of being rated anything on Yelp's scale. Essentially this means that health code violations have no effect on yelp ratings, as the distributions for the variables are not the same. This makes sense as Yelp ratings rely mostly on data regarding customer service and an individual's experience with a resturaunt, while violations refer often times to many things that lead to violations happen beyond what customers see and often deal with things like employee sanitation, or temperatures for cooking meats. A more interesting study would be a over time analysis since the creation of yelp, comparing median resturaunt Health inspection scores to their respective yelp ratings. However, that would require a different data set and a different set of variables, to see the trend over time.  \n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
